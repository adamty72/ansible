---
- name: Scan for WordPress updates and apply them
  hosts: webservers
  become: yes
  vars:
    teams_webhook_url: "https://rocketwplimited.webhook.office.com/webhookb2/2185f0da-502f-4a3f-b435-3c14e7a154b3@4963f8a3-9dbf-444f-aed6-754777afe177/IncomingWebhook/cb802ad2fb9e486ca90ab6de2fc601c4/9ce1a27b-d314-4803-9bea-b449036d1b9f/V2z-Vu5hxujeqBUwjGTxHS_7vFEYy54A3xXTD0ksyS7oI1"
    log_file: "/var/log/wp_update_failures.log"
  tasks:
    - name: Find WordPress installations
      find:
        paths: /var/www
        patterns: wp-config.php
        recurse: yes
      register: wp_sites

    - name: Get WordPress site URLs (subdirectory names)
      set_fact:
        site_urls: "{{ wp_sites.files | map(attribute='path') | map('dirname') | map('basename') | list }}"

    - name: Check and update WordPress plugins site by site
      block:
        - name: Update WordPress plugins for each site
          shell:
           gp wp {{ item }} plugin list --field=name --status=active --update=available | xargs -I {} gp wp {{ item }} plugin update {}
          register: update_result
          ignore_errors: yes
          loop: "{{ site_urls }}"
          loop_control:
            loop_var: site

        - name: Collect update results
          set_fact:
            updates: "{{ updates | default([]) + [{'site': site, 'result': update_result.stdout, 'failed': update_result.rc != 0}] }}"
          loop: "{{ update_result.results }}"
          loop_control:
            loop_var: site

        - name: Log failed updates
          lineinfile:
            path: "{{ log_file }}"
            line: "Failed update on site {{ site }}: {{ update_result.stdout }}"
            create: yes
          when: update_result.rc != 0
          loop: "{{ update_result.results }}"
          loop_control:
            loop_var: site
